name: Post-Release PR Merge

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  tag-and-release:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release-v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract version from branch name
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=$(echo $BRANCH_NAME | sed -n 's/release-v\([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/p')
          if [ -z "$VERSION" ]; then
            echo "Could not extract version from branch name: $BRANCH_NAME"
            exit 1
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"
      
      - name: Check for tag
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
            echo "Tag v${{ env.VERSION }} already exists"
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
            echo "Tag v${{ env.VERSION }} does not exist yet"
          fi
      
      - name: Create and push tag
        if: env.TAG_EXISTS == 'false'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -a "v${{ env.VERSION }}" -m "Release v${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"
          echo "Created and pushed tag v${{ env.VERSION }}"
      
      # This step creates a GitHub Release which will trigger the publish workflow
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body: |
            Release v${{ env.VERSION }}
            
            See the [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true